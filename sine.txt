module z(
input clk,
output reg [7:0] sinout
);
reg [23:0] clk0 = 0;
reg [3:0] count = 4'd0;
always@(posedge clk)
begin
     if(count == 4'd15)
	     count <=4'd0;
	  else
	     count <= count + 4'd1;
end
always@(posedge clk)
begin

		case(count)
			4'd0:sinout <= 8'd176;
			4'd1:sinout <= 8'd218;
			4'd2:sinout <= 8'd244;
			4'd3:sinout <= 8'd254;
			4'd4:sinout <= 8'd244;
        	   	4'd5:sinout <= 8'd218;
			4'd6:sinout <= 8'd176;
			4'd7:sinout <= 8'd127;
			4'd8:sinout <= 8'd78;
			4'd9:sinout <= 8'd37;
			4'd10:sinout <= 8'd10;
			4'd11:sinout <= 8'd0;
		 	4'd12:sinout <= 8'd10;
			4'd13:sinout <= 8'd37;
			4'd14:sinout <= 8'd78;
			4'd15:sinout <= 8'd127;
		endcase

end
endmodule
